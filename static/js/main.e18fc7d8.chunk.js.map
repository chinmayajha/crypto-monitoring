{"version":3,"sources":["Coin.js","App.js","index.js"],"names":["coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","toLowerCase","includes","onClick","window","location","reload","type","placeholder","onChange","e","target","value","map","Coin","market_cap","current_price","price_change_percentage_24h","total_volume","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA4BeA,EA1BF,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC7D,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAEhC,sBAAKK,UAAU,YAAf,UACI,mBAAGA,UAAU,aAAb,SAA2BJ,IAC3B,mBAAGI,UAAU,cAAb,SAA4BH,EAAOM,mBAClCL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OAEA,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OAEJ,oBAAGJ,UAAU,iBAAb,wBACgBD,EAAUI,6BCyC/BE,MAzDf,WACE,IAGA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACAC,qBAAU,WACRC,IAAMC,IAAI,4HACPC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC/B,IAEH,IAIMG,EAAgBd,EAAMe,QAAO,SAAA9B,GAAI,OACrCA,EAAKC,KAAK8B,cAAcC,SAASf,EAAOc,kBAI1C,OACE,sBAAKvB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,uBAEA,wBAAQA,UAAU,UAAUyB,QA3Bd,WAClBC,OAAOC,SAASC,UA0BZ,qBACA,uBAEA,uBACA,+BACE,uBAAOC,KAAK,OAAOC,YAAY,SAAS9B,UAAU,aAChD+B,SArBW,SAAAC,GACnBtB,EAAUsB,EAAEC,OAAOC,eAwBfb,EAAcc,KAAI,SAAA3C,GAChB,OACE,cAAC4C,EAAD,CACE3C,KAAMD,EAAKC,KACXC,MAAOF,EAAKE,MACZC,OAAQH,EAAKG,OACbI,UAAWP,EAAK6C,WAChBzC,MAAOJ,EAAK8C,cACZxC,YAAaN,EAAK+C,4BAClB1C,OAAQL,EAAKgD,cAPJhD,EAAKiD,WCxC5BC,IAASC,OAAO,cAAC,IAAMC,WAAP,UACZ,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.e18fc7d8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './coin.css'\r\nconst coin = ({ name, image, symbol, price, volume, priceChange, marketcap }) => {\r\n    return (\r\n        <div className='coin-container'>\r\n            <div className='coin-row'>\r\n                <div className='coin'>\r\n                    <img src={image} alt='crypto' />\r\n                    <h1>{name}</h1>\r\n                    <p className='coin-symbol'>{symbol}</p>\r\n                </div>\r\n                <div className='coin-data'>\r\n                    <p className='coin-price'>{price}</p>\r\n                    <p className='coin-volume'>{volume.toLocaleString()}</p>\r\n                    {priceChange < 0 ? (\r\n                        <p className='coin-percent red'>{priceChange.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className='coin-percent green'>{priceChange.toFixed(2)}%</p>\r\n                    )}\r\n                    <p className='coin-marketcap'>\r\n                        Mkt Cap : ${marketcap.toLocaleString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default coin\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Coin from './Coin'\nfunction App() {\n  const refreshPage = () => {\n    window.location.reload();\n  }\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n      .then(res => {\n        setCoins(res.data);\n      }).catch(error => console.log(error));\n  }, [])\n\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  )\n\n\n  return (\n    <div className='coin-app'>\n      <div className='coin-search'>\n        <h1 className='coin-test'>Search a Currency</h1>\n        <br>\n        </br>\n        <button className=\"refresh\" onClick={refreshPage}>Refresh</button>\n        <br>\n        </br>\n        <br></br>\n        <form>\n          <input type='text' placeholder='Search' className='coin-input'\n            onChange={handleChange} />\n        </form>\n      </div>\n      {\n        filteredCoins.map(coin => {\n          return (\n            <Coin key={coin.id}\n              name={coin.name}\n              image={coin.image}\n              symbol={coin.symbol}\n              marketcap={coin.market_cap}\n              price={coin.current_price}\n              priceChange={coin.price_change_percentage_24h}\n              volume={coin.total_volume}\n            />\n          )\n        })\n      }\n    </div >\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode >\n    <App />\n</React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}